{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msash\\\\Documents\\\\MachineLearning\\\\FinalProject\\\\TechQueryRecommender\\\\frontend\\\\src\\\\Kanban.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // make sure to install axios using npm or yarn\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = () => {\n  _s();\n  const [board, setBoard] = useState([]);\n\n  // Fetch departments from the backend on component mount\n  useEffect(() => {\n    const fetchDepartments = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/api/department/departments');\n        const departments = response.data.map(dept => ({\n          ...dept,\n          tasks: dept.supportQueries.map(query => ({\n            id: query._id,\n            title: query.queryText\n          }))\n        }));\n        setBoard(departments);\n      } catch (error) {\n        console.error('Error fetching departments:', error);\n      }\n    };\n    fetchDepartments();\n  }, []); // The empty array ensures the effect only runs once after the initial render\n\n  // Function to add a new task, move tasks, and delete tasks will go here\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board\",\n    children: board.map(department => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: department.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), department.tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-task\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))]\n    }, department._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanBoard, \"jMNr9OUCnGXRnWCrgJjYZl+B82M=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","KanbanBoard","_s","board","setBoard","fetchDepartments","response","get","departments","data","map","dept","tasks","supportQueries","query","id","_id","title","queryText","error","console","className","children","department","name","fileName","_jsxFileName","lineNumber","columnNumber","task","_c","$RefreshReg$"],"sources":["C:/Users/msash/Documents/MachineLearning/FinalProject/TechQueryRecommender/frontend/src/Kanban.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'; // make sure to install axios using npm or yarn\r\n\r\nconst KanbanBoard = () => {\r\n  const [board, setBoard] = useState([]);\r\n\r\n  // Fetch departments from the backend on component mount\r\n  useEffect(() => {\r\n    const fetchDepartments = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:4000/api/department/departments');\r\n        const departments = response.data.map(dept => ({\r\n          ...dept,\r\n          tasks: dept.supportQueries.map(query => ({ id: query._id, title: query.queryText }))\r\n        }));\r\n        setBoard(departments);\r\n      } catch (error) {\r\n        console.error('Error fetching departments:', error);\r\n      }\r\n    };\r\n\r\n    fetchDepartments();\r\n  }, []); // The empty array ensures the effect only runs once after the initial render\r\n\r\n  // Function to add a new task, move tasks, and delete tasks will go here\r\n\r\n  return (\r\n    <div className=\"kanban-board\">\r\n      {board.map(department => (\r\n        <div key={department._id} className=\"kanban-column\">\r\n          <h2>{department.name}</h2>\r\n          {department.tasks.map(task => (\r\n            <div key={task.id} className=\"kanban-task\">\r\n              <p>{task.title}</p>\r\n              {/* Buttons or links to move and delete tasks */}\r\n            </div>\r\n          ))}\r\n          {/* Button or form to add new tasks */}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanBoard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,kDAAkD,CAAC;QACpF,MAAMC,WAAW,GAAGF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACC,IAAI,KAAK;UAC7C,GAAGA,IAAI;UACPC,KAAK,EAAED,IAAI,CAACE,cAAc,CAACH,GAAG,CAACI,KAAK,KAAK;YAAEC,EAAE,EAAED,KAAK,CAACE,GAAG;YAAEC,KAAK,EAAEH,KAAK,CAACI;UAAU,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;QACHd,QAAQ,CAACI,WAAW,CAAC;MACvB,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDd,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;;EAEA,oBACEL,OAAA;IAAKqB,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BnB,KAAK,CAACO,GAAG,CAACa,UAAU,iBACnBvB,OAAA;MAA0BqB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBACjDtB,OAAA;QAAAsB,QAAA,EAAKC,UAAU,CAACC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACzBL,UAAU,CAACX,KAAK,CAACF,GAAG,CAACmB,IAAI,iBACxB7B,OAAA;QAAmBqB,SAAS,EAAC,aAAa;QAAAC,QAAA,eACxCtB,OAAA;UAAAsB,QAAA,EAAIO,IAAI,CAACZ;QAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADXC,IAAI,CAACd,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACN,CAAC;IAAA,GAPML,UAAU,CAACP,GAAG;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASnB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAvCID,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AAyCjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}