{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msash\\\\Documents\\\\MachineLearning\\\\FinalProject\\\\TechQueryRecommender\\\\frontend\\\\src\\\\Kanban.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Modal from './Modal'; // Make sure this import points to where your Modal.js is\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = () => {\n  _s();\n  const [board, setBoard] = useState([]);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to control modal visibility\n\n  useEffect(() => {\n    const fetchDepartments = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/api/department/departments');\n        console.log('Data fetched:', response.data); // Check the fetched data\n        const departments = response.data.map(dept => ({\n          ...dept,\n          tasks: dept.supportQueries.map(query => ({\n            id: query._id,\n            title: query.queryText\n          }))\n        }));\n        setBoard(departments);\n      } catch (error) {\n        console.error('Error fetching departments:', error);\n        setError(error);\n      }\n    };\n    fetchDepartments();\n  }, []);\n  const handleAddQueryClick = () => {\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleSubmitQuery = async queryText => {\n    setIsModalOpen(false);\n    // Add your logic to submit the query and update the board state here\n    try {\n      const response = await axios.post('http://localhost:4000/api/department/createQuery', {\n        queryText\n      });\n      // Assuming the backend returns the new query correctly sorted into a department\n      setBoard(response.data); // You might need to adjust this depending on your API response\n    } catch (error) {\n      console.error('Failed to add query:', error);\n      setError(error);\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"An error occurred: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  if (!board.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n\n  //Creation of a Department (unused but here if needed)\n  const handleCreateDepartment = async departmentName => {\n    try {\n      const response = await axios.post('http://localhost:4000/api/department/createDepartment', {\n        name: departmentName\n      });\n      if (response.data) {\n        setBoard([...board, response.data]); // Assuming the backend returns the created department\n      }\n    } catch (error) {\n      console.error('Failed to create department:', error);\n      setError(error);\n    }\n  };\n\n  //Deletion of a Department (unused but here if needed)\n  const handleDeleteDepartment = async departmentId => {\n    try {\n      await axios.delete(`http://localhost:4000/api/department/departments/${departmentId}`);\n      setBoard(board.filter(dept => dept._id !== departmentId)); // Remove the department from the state\n    } catch (error) {\n      console.error('Failed to delete department:', error);\n      setError(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddQueryClick,\n      children: \"Add Query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: handleCloseModal,\n      onSubmit: handleSubmitQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-board\",\n      children: board.map(department => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: department.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), department.tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-task\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this))]\n      }, department._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(KanbanBoard, \"R//oAJHqjrefEsKeAYlZ+JWmr84=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","KanbanBoard","_s","board","setBoard","error","setError","isModalOpen","setIsModalOpen","fetchDepartments","response","get","console","log","data","departments","map","dept","tasks","supportQueries","query","id","_id","title","queryText","handleAddQueryClick","handleCloseModal","handleSubmitQuery","post","children","message","fileName","_jsxFileName","lineNumber","columnNumber","length","handleCreateDepartment","departmentName","name","handleDeleteDepartment","departmentId","delete","filter","onClick","isOpen","onClose","onSubmit","className","department","task","_c","$RefreshReg$"],"sources":["C:/Users/msash/Documents/MachineLearning/FinalProject/TechQueryRecommender/frontend/src/Kanban.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Modal from './Modal'; // Make sure this import points to where your Modal.js is\r\n\r\n\r\nconst KanbanBoard = () => {\r\n  const [board, setBoard] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to control modal visibility\r\n\r\n  useEffect(() => {\r\n    const fetchDepartments = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:4000/api/department/departments');\r\n        console.log('Data fetched:', response.data); // Check the fetched data\r\n        const departments = response.data.map(dept => ({\r\n          ...dept,\r\n          tasks: dept.supportQueries.map(query => ({ id: query._id, title: query.queryText }))\r\n        }));\r\n        setBoard(departments);\r\n      } catch (error) {\r\n        console.error('Error fetching departments:', error);\r\n        setError(error);\r\n      }\r\n    };\r\n\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  const handleAddQueryClick = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleSubmitQuery = async (queryText) => {\r\n    setIsModalOpen(false);\r\n    // Add your logic to submit the query and update the board state here\r\n    try {\r\n      const response = await axios.post('http://localhost:4000/api/department/createQuery', {\r\n        queryText\r\n      });\r\n      // Assuming the backend returns the new query correctly sorted into a department\r\n      setBoard(response.data); // You might need to adjust this depending on your API response\r\n    } catch (error) {\r\n      console.error('Failed to add query:', error);\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <div>An error occurred: {error.message}</div>;\r\n  }\r\n\r\n  if (!board.length) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n\r\n  //Creation of a Department (unused but here if needed)\r\n  const handleCreateDepartment = async (departmentName) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:4000/api/department/createDepartment', {\r\n        name: departmentName\r\n      });\r\n      if (response.data) {\r\n        setBoard([...board, response.data]); // Assuming the backend returns the created department\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to create department:', error);\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  //Deletion of a Department (unused but here if needed)\r\n  const handleDeleteDepartment = async (departmentId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:4000/api/department/departments/${departmentId}`);\r\n      setBoard(board.filter(dept => dept._id !== departmentId)); // Remove the department from the state\r\n    } catch (error) {\r\n      console.error('Failed to delete department:', error);\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <button onClick={handleAddQueryClick}>Add Query</button>\r\n      <Modal isOpen={isModalOpen} onClose={handleCloseModal} onSubmit={handleSubmitQuery} />\r\n      <div className=\"kanban-board\">\r\n        {board.map(department => (\r\n          <div key={department._id} className=\"kanban-column\">\r\n            <h2>{department.name}</h2>\r\n            {department.tasks.map(task => (\r\n              <div key={task.id} className=\"kanban-task\">\r\n                <p>{task.title}</p>\r\n                {/* Buttons or links to move and delete tasks */}\r\n              </div>\r\n            ))}\r\n            {/* Button or form to add new tasks */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default KanbanBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}