{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msash\\\\Documents\\\\MachineLearning\\\\FinalProject\\\\TechQueryRecommender\\\\frontend\\\\src\\\\Kanban.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport UploadCSV from './UploadCSV';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = () => {\n  _s();\n  const [board, setBoard] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchBoardData(); // Fetch initial board data\n  }, []);\n  const fetchBoardData = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/api/department/departments');\n      const departments = response.data.map(dept => ({\n        ...dept,\n        tasks: dept.supportQueries.map(query => ({\n          id: query._id,\n          title: query.queryText\n        }))\n      }));\n      setBoard(departments);\n    } catch (error) {\n      console.error('Error fetching departments:', error);\n      setError(error);\n    }\n  };\n  const handleFileUploaded = () => {\n    fetchBoardData(); // Refresh board data after CSV upload\n  };\n  const handleCreateDepartment = async departmentName => {\n    try {\n      const response = await axios.post('http://localhost:4000/api/department/createDepartment', {\n        name: departmentName\n      });\n      if (response.data) {\n        setBoard([...board, response.data]);\n      }\n    } catch (error) {\n      console.error('Failed to create department:', error);\n      setError(error);\n    }\n  };\n  const handleDeleteDepartment = async departmentId => {\n    try {\n      await axios.delete(`http://localhost:4000/api/department/departments/${departmentId}`);\n      setBoard(board.filter(dept => dept._id !== departmentId));\n    } catch (error) {\n      console.error('Failed to delete department:', error);\n      setError(error);\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"An error occurred: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n  if (!board.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban-board\",\n    children: [/*#__PURE__*/_jsxDEV(UploadCSV, {\n      onUploadSuccess: handleFileUploaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), \" \", board.map(department => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: department.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), department.tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-task\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))]\n    }, department._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanBoard, \"PQZcSHNipU86Dl6CDu+iN7NLRS0=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useEffect","axios","UploadCSV","jsxDEV","_jsxDEV","KanbanBoard","_s","board","setBoard","error","setError","fetchBoardData","response","get","departments","data","map","dept","tasks","supportQueries","query","id","_id","title","queryText","console","handleFileUploaded","handleCreateDepartment","departmentName","post","name","handleDeleteDepartment","departmentId","delete","filter","children","message","fileName","_jsxFileName","lineNumber","columnNumber","length","className","onUploadSuccess","department","task","_c","$RefreshReg$"],"sources":["C:/Users/msash/Documents/MachineLearning/FinalProject/TechQueryRecommender/frontend/src/Kanban.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport UploadCSV from './UploadCSV';\r\n\r\nconst KanbanBoard = () => {\r\n  const [board, setBoard] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchBoardData();  // Fetch initial board data\r\n  }, []);\r\n\r\n  const fetchBoardData = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:4000/api/department/departments');\r\n      const departments = response.data.map(dept => ({\r\n        ...dept,\r\n        tasks: dept.supportQueries.map(query => ({ id: query._id, title: query.queryText }))\r\n      }));\r\n      setBoard(departments);\r\n    } catch (error) {\r\n      console.error('Error fetching departments:', error);\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  const handleFileUploaded = () => {\r\n    fetchBoardData();  // Refresh board data after CSV upload\r\n  };\r\n\r\n  const handleCreateDepartment = async (departmentName) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:4000/api/department/createDepartment', {\r\n        name: departmentName\r\n      });\r\n      if (response.data) {\r\n        setBoard([...board, response.data]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to create department:', error);\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteDepartment = async (departmentId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:4000/api/department/departments/${departmentId}`);\r\n      setBoard(board.filter(dept => dept._id !== departmentId));\r\n    } catch (error) {\r\n      console.error('Failed to delete department:', error);\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <div>An error occurred: {error.message}</div>;\r\n  }\r\n\r\n  if (!board.length) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"kanban-board\">\r\n      <UploadCSV onUploadSuccess={handleFileUploaded} /> {/* CSV Upload component */}\r\n      {board.map(department => (\r\n        <div key={department._id} className=\"kanban-column\">\r\n          <h2>{department.name}</h2>\r\n          {department.tasks.map(task => (\r\n            <div key={task.id} className=\"kanban-task\">\r\n              <p>{task.title}</p>\r\n              {/* Here you could also include buttons or links to edit and delete tasks */}\r\n            </div>\r\n          ))}\r\n          {/* Optionally, add a button or form here to add new tasks or departments */}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}