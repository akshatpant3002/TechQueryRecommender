{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msash\\\\Documents\\\\MachineLearning\\\\FinalProject\\\\TechQueryRecommender\\\\frontend\\\\src\\\\Kanban.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Modal from './Modal'; // Make sure this import points to where your Modal.js is\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = () => {\n  _s();\n  const [board, setBoard] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); // Added isLoading state\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to control modal visibility\n\n  useEffect(() => {\n    fetchDepartments();\n  }, []);\n  const handleAddQueryClick = () => {\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleSubmitQuery = async queryText => {\n    setIsModalOpen(false);\n    try {\n      const response = await axios.post('http://localhost:4000/api/query/createQuery', {\n        queryText\n      });\n      // After successfully creating the query, re-fetch the updated board data\n      await fetchDepartments(); // You can call this function directly to refresh the board\n    } catch (error) {\n      console.error('Failed to add query:', error);\n      setError(error);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"An error occurred: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  if (!board.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data found. Click \\\"Add Query\\\" to create a new query.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n\n  //Creation of a Department (unused but here if needed)\n  const handleCreateDepartment = async departmentName => {\n    try {\n      const response = await axios.post('http://localhost:4000/api/department/createDepartment', {\n        name: departmentName\n      });\n      if (response.data) {\n        setBoard([...board, response.data]); // Assuming the backend returns the created department\n      }\n    } catch (error) {\n      console.error('Failed to create department:', error);\n      setError(error);\n    }\n  };\n\n  //Deletion of a Department (unused but here if needed)\n  const handleDeleteDepartment = async departmentId => {\n    try {\n      await axios.delete(`http://localhost:4000/api/department/departments/${departmentId}`);\n      setBoard(board.filter(dept => dept._id !== departmentId)); // Remove the department from the state\n    } catch (error) {\n      console.error('Failed to delete department:', error);\n      setError(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddQueryClick,\n      children: \"Add Query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: handleCloseModal,\n      onSubmit: handleSubmitQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-board\",\n      children: board.map(department => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: department.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), department.tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-task\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this))]\n      }, department._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(KanbanBoard, \"d9QG2G/c29YzvZZScGp9wLiIGcI=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","KanbanBoard","_s","board","setBoard","isLoading","setIsLoading","error","setError","isModalOpen","setIsModalOpen","fetchDepartments","handleAddQueryClick","handleCloseModal","handleSubmitQuery","queryText","response","post","console","children","fileName","_jsxFileName","lineNumber","columnNumber","message","length","handleCreateDepartment","departmentName","name","data","handleDeleteDepartment","departmentId","delete","filter","dept","_id","onClick","isOpen","onClose","onSubmit","className","map","department","tasks","task","title","id","_c","$RefreshReg$"],"sources":["C:/Users/msash/Documents/MachineLearning/FinalProject/TechQueryRecommender/frontend/src/Kanban.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Modal from './Modal'; // Make sure this import points to where your Modal.js is\r\n\r\nconst KanbanBoard = () => {\r\n  const [board, setBoard] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true); // Added isLoading state\r\n  const [error, setError] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to control modal visibility\r\n\r\n  useEffect(() => {\r\n  \r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  const handleAddQueryClick = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleSubmitQuery = async (queryText) => {\r\n    setIsModalOpen(false);\r\n    try {\r\n      const response = await axios.post('http://localhost:4000/api/query/createQuery', {\r\n        queryText\r\n      });\r\n      // After successfully creating the query, re-fetch the updated board data\r\n      await fetchDepartments(); // You can call this function directly to refresh the board\r\n    } catch (error) {\r\n      console.error('Failed to add query:', error);\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>An error occurred: {error.message}</div>;\r\n  }\r\n\r\n  if (!board.length) {\r\n    return <div>No data found. Click \"Add Query\" to create a new query.</div>;\r\n  }\r\n\r\n\r\n  //Creation of a Department (unused but here if needed)\r\n  const handleCreateDepartment = async (departmentName) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:4000/api/department/createDepartment', {\r\n        name: departmentName\r\n      });\r\n      if (response.data) {\r\n        setBoard([...board, response.data]); // Assuming the backend returns the created department\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to create department:', error);\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  //Deletion of a Department (unused but here if needed)\r\n  const handleDeleteDepartment = async (departmentId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:4000/api/department/departments/${departmentId}`);\r\n      setBoard(board.filter(dept => dept._id !== departmentId)); // Remove the department from the state\r\n    } catch (error) {\r\n      console.error('Failed to delete department:', error);\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <button onClick={handleAddQueryClick}>Add Query</button>\r\n      <Modal isOpen={isModalOpen} onClose={handleCloseModal} onSubmit={handleSubmitQuery} />\r\n      <div className=\"kanban-board\">\r\n        {board.map(department => (\r\n          <div key={department._id} className=\"kanban-column\">\r\n            <h2>{department.name}</h2>\r\n            {department.tasks.map(task => (\r\n              <div key={task.id} className=\"kanban-task\">\r\n                <p>{task.title}</p>\r\n                {/* Buttons or links to move and delete tasks */}\r\n              </div>\r\n            ))}\r\n            {/* Button or form to add new tasks */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default KanbanBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}