{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msash\\\\Documents\\\\MachineLearning\\\\FinalProject\\\\TechQueryRecommender\\\\frontend\\\\src\\\\Kanban.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Modal from './Modal'; // Make sure this import points to where your Modal.js is\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = () => {\n  _s();\n  const [board, setBoard] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); // Added isLoading state\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to control modal visibility\n\n  useEffect(() => {\n    const fetchDepartments = async () => {\n      setIsLoading(true); // Set loading state\n      try {\n        const response = await axios.get('http://localhost:4000/api/department/departments');\n        console.log('Data fetched:', response.data); // Check the fetched data\n        const departments = response.data.map(dept => ({\n          ...dept,\n          tasks: dept.supportQueries.map(query => ({\n            id: query._id,\n            title: query.queryText\n          }))\n        }));\n        setBoard(departments);\n      } catch (error) {\n        console.error('Error fetching departments:', error);\n        setError(error);\n      } finally {\n        setIsLoading(false); // Reset loading state\n      }\n    };\n    fetchDepartments();\n  }, []);\n  const handleAddQueryClick = () => {\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleSubmitQuery = async queryText => {\n    setIsModalOpen(false);\n    setIsLoading(true); // Set loading state before submitting\n    try {\n      const response = await axios.post('http://localhost:4000/api/query/createQuery', {\n        queryText\n      });\n      // Assuming the backend returns the updated board or the new query\n      setBoard(response.data); // Update board state with the response\n    } catch (error) {\n      console.error('Failed to add query:', error);\n      setError(error);\n    } finally {\n      setIsLoading(false); // Reset loading state after submitting\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"An error occurred: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n  if (!board.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data found. Click \\\"Add Query\\\" to create a new query.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Rest of your component render logic\n};\n_s(KanbanBoard, \"d9QG2G/c29YzvZZScGp9wLiIGcI=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","jsxDEV","_jsxDEV","KanbanBoard","_s","board","setBoard","isLoading","setIsLoading","error","setError","isModalOpen","setIsModalOpen","fetchDepartments","response","get","console","log","data","departments","map","dept","tasks","supportQueries","query","id","_id","title","queryText","handleAddQueryClick","handleCloseModal","handleSubmitQuery","post","children","fileName","_jsxFileName","lineNumber","columnNumber","message","length","_c","$RefreshReg$"],"sources":["C:/Users/msash/Documents/MachineLearning/FinalProject/TechQueryRecommender/frontend/src/Kanban.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Modal from './Modal'; // Make sure this import points to where your Modal.js is\r\n\r\nconst KanbanBoard = () => {\r\n  const [board, setBoard] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true); // Added isLoading state\r\n  const [error, setError] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to control modal visibility\r\n\r\n  useEffect(() => {\r\n    const fetchDepartments = async () => {\r\n      setIsLoading(true); // Set loading state\r\n      try {\r\n        const response = await axios.get('http://localhost:4000/api/department/departments');\r\n        console.log('Data fetched:', response.data); // Check the fetched data\r\n        const departments = response.data.map(dept => ({\r\n          ...dept,\r\n          tasks: dept.supportQueries.map(query => ({ id: query._id, title: query.queryText }))\r\n        }));\r\n        setBoard(departments);\r\n      } catch (error) {\r\n        console.error('Error fetching departments:', error);\r\n        setError(error);\r\n      } finally {\r\n        setIsLoading(false); // Reset loading state\r\n      }\r\n    };\r\n\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  const handleAddQueryClick = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleSubmitQuery = async (queryText) => {\r\n    setIsModalOpen(false);\r\n    setIsLoading(true); // Set loading state before submitting\r\n    try {\r\n      const response = await axios.post('http://localhost:4000/api/query/createQuery', {\r\n        queryText\r\n      });\r\n      // Assuming the backend returns the updated board or the new query\r\n      setBoard(response.data); // Update board state with the response\r\n    } catch (error) {\r\n      console.error('Failed to add query:', error);\r\n      setError(error);\r\n    } finally {\r\n      setIsLoading(false); // Reset loading state after submitting\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>An error occurred: {error.message}</div>;\r\n  }\r\n\r\n  if (!board.length) {\r\n    return <div>No data found. Click \"Add Query\" to create a new query.</div>;\r\n  }\r\n\r\n  // Rest of your component render logic\r\n};\r\n\r\nexport default KanbanBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}